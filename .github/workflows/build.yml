name: PR Builder
on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build check

    - name: Upload license reports
      # Try to upload report even if previous step fails
      if: '!cancelled()'
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: license-check-report
        path: |
          ./build/reports/dependency-license/dependencies-without-allowed-license.json
          ./build/reports/dependency-license/project-licenses-for-check-license-task.json

    - name: Prepare lib artifacts
      run: ./gradlew publishMavenPublicationToLocalMavenRepoRepository

    - name: Test example project
      working-directory: example/java
      run: ./gradlew test

    - name: Upload library artifacts
      uses: actions/upload-artifact@v4
      with:
        name: eu.efti.datatools.lib
        path: ./build/local-maven-repo/

    - name: Upload app artifact
      uses: actions/upload-artifact@v4
      with:
        name: eu.efti.datatools.app
        path: |
          ./app/build/distributions/app.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download library package
        uses: actions/download-artifact@v4
        with:
          name: eu.efti.datatools.lib
          path: ./

      - name: Zip library package
        run: zip -r eu-efti-datatools-$tag.zip

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              eu-efti-datatools-$tag.zip